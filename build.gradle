plugins {
	id 'org.springframework.boot' version '2.7.3'
	id 'io.spring.dependency-management' version '1.0.13.RELEASE'
	id 'java'
	id 'com.moowork.node' version '1.3.1'
}

group = 'cz.forgottenempire'
version = '0.1.0'
sourceCompatibility = '17'

configurations {
	developmentOnly
	runtimeClasspath {
		extendsFrom developmentOnly
	}
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

node {
	// Set the work directory for unpacking node
	workDir = file("${project.buildDir}/nodejs")

	// Set the work directory for NPM
	npmWorkDir = file("${project.buildDir}/npm")
}

task appNpmInstall(type: NpmTask) {
	description = "Installs all dependencies from package.json"
	workingDir = file("${project.projectDir}/src/main/webapp")
	args = ["install"]
}

task appNpmBuild(type: NpmTask) {
	description = "Builds production version of the webapp"
	workingDir = file("${project.projectDir}/src/main/webapp")
	args = ["run", "build"]
}

task copyWebApp(type: Copy) {
	from 'src/main/webapp/build'
	into 'build/resources/main/static/.'
}

// uncomment for prod build
appNpmBuild.dependsOn appNpmInstall
copyWebApp.dependsOn appNpmBuild
compileJava.dependsOn copyWebApp

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation group: 'commons-io', name: 'commons-io', version: '2.7'
	implementation group: 'com.auth0', name: 'java-jwt', version: '4.0.0'
	implementation group: 'com.ibasco.agql', name: 'agql-source-query', version: '0.1.7'
	implementation group: 'org.freemarker', name: 'freemarker', version: '2.3.30'
	implementation group: 'org.springframework', name: 'spring-context-support', version: '5.2.6.RELEASE'
	implementation group: 'com.google.guava', name: 'guava', version: '30.0-android'
	implementation group: 'javax.validation', name: 'validation-api', version: '2.0.1.Final'
	implementation 'org.mapstruct:mapstruct:1.5.2.Final'

	compileOnly 'org.projectlombok:lombok'

	runtimeOnly 'mysql:mysql-connector-java'
	runtimeOnly 'com.h2database:h2'

	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
	annotationProcessor 'org.projectlombok:lombok'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.2.Final'

    testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
}

test {
	useJUnitPlatform()
}
